services:
  db:
    container_name: db
    image: postgres:16.1-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    
    networks:
      - db-net

    volumes:
      - db-vol:/var/lib/postgresql/data

    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
  
  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile

    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST}
      PORT: ${APP_PORT}
      WB_API_TOKEN: ${WB_API_TOKEN}
      GOOGLE_SHEETS_IDS: ${GOOGLE_SHEETS_IDS}
      GOOGLE_CREDENTIALS_PATH: ${GOOGLE_CREDENTIALS_PATH}

    depends_on:
      db:
        condition: service_healthy

    networks:
      - db-net

    volumes:
      - ./google-credentials.json:/app/google-credentials.json:ro
    
    command: ["./start.sh"]

    restart: unless-stopped
  


networks:
  db-net:
    driver: bridge

volumes:
  db-vol:
    driver: local
